return {
	"nvim-treesitter/nvim-treesitter-textobjects",
	branch = "main",
	event = { "BufReadPost", "BufNewFile" },
	opts = {
		select = {
			enable = true,
			lookahead = false,
		},
		move = {
			enable = true,
		},
	},
	config = function(_, opts)
		require("nvim-treesitter-textobjects").setup(opts)

		-- Select textobjects
		local ts_select = require("nvim-treesitter-textobjects.select")
		vim.keymap.set({ "x", "o" }, "ia", function()
			ts_select.select_textobject("@attribute.inner", "textobjects")
		end, { desc = "@attribute.inner" })
		vim.keymap.set({ "x", "o" }, "aa", function()
			ts_select.select_textobject("@attribute.outer", "textobjects")
		end, { desc = "@attribute.outer" })
		vim.keymap.set({ "x", "o" }, "iA", function()
			ts_select.select_textobject("@assignment.inner", "textobjects")
		end, { desc = "@assignment.inner" })
		vim.keymap.set({ "x", "o" }, "aA", function()
			ts_select.select_textobject("@assignment.outer", "textobjects")
		end, { desc = "@assignment.outer" })
		vim.keymap.set({ "x", "o" }, "ib", function()
			ts_select.select_textobject("@block.inner", "textobjects")
		end, { desc = "@block.inner" })
		vim.keymap.set({ "x", "o" }, "ab", function()
			ts_select.select_textobject("@block.outer", "textobjects")
		end, { desc = "@block.outer" })
		vim.keymap.set({ "x", "o" }, "iC", function()
			ts_select.select_textobject("@class.inner", "textobjects")
		end, { desc = "@class.inner" })
		vim.keymap.set({ "x", "o" }, "aC", function()
			ts_select.select_textobject("@class.outer", "textobjects")
		end, { desc = "@class.outer" })
		vim.keymap.set({ "x", "o" }, "ic", function()
			ts_select.select_textobject("@call.inner", "textobjects")
		end, { desc = "@call.inner" })
		vim.keymap.set({ "x", "o" }, "ac", function()
			ts_select.select_textobject("@call.outer", "textobjects")
		end, { desc = "@call.outer" })
		vim.keymap.set({ "x", "o" }, "i/", function()
			ts_select.select_textobject("@comment.inner", "textobjects")
		end, { desc = "@comment.inner" })
		vim.keymap.set({ "x", "o" }, "a/", function()
			ts_select.select_textobject("@comment.outer", "textobjects")
		end, { desc = "@comment.outer" })
		vim.keymap.set({ "x", "o" }, "i=", function()
			ts_select.select_textobject("@conditional.inner", "textobjects")
		end, { desc = "@conditional.inner" })
		vim.keymap.set({ "x", "o" }, "a=", function()
			ts_select.select_textobject("@conditional.outer", "textobjects")
		end, { desc = "@conditional.outer" })
		vim.keymap.set({ "x", "o" }, "if", function()
			ts_select.select_textobject("@function.inner", "textobjects")
		end, { desc = "@function.inner" })
		vim.keymap.set({ "x", "o" }, "af", function()
			ts_select.select_textobject("@function.outer", "textobjects")
		end, { desc = "@function.outer" })
		vim.keymap.set({ "x", "o" }, "il", function()
			ts_select.select_textobject("@function.loop", "textobjects")
		end, { desc = "@function.loop" })
		vim.keymap.set({ "x", "o" }, "al", function()
			ts_select.select_textobject("@function.loop", "textobjects")
		end, { desc = "@function.loop" })
		vim.keymap.set({ "x", "o" }, "ip", function()
			ts_select.select_textobject("@parameter.inner", "textobjects")
		end, { desc = "@parameter.inner" })
		vim.keymap.set({ "x", "o" }, "ap", function()
			ts_select.select_textobject("@parameter.outer", "textobjects")
		end, { desc = "@parameter.outer" })

		-- Move to textobjects
		local ts_move = require("nvim-treesitter-textobjects.move")
		vim.keymap.set({ "n", "x", "o" }, "]=", function()
			ts_move.goto_next_start("@conditional.outer")
		end, { desc = "@conditional.outer" })
		vim.keymap.set({ "n", "x", "o" }, "]f", function()
			ts_move.goto_next_start("@function.outer")
		end, { desc = "@function.outer" })
		vim.keymap.set({ "n", "x", "o" }, "]+", function()
			ts_move.goto_next_end("@conditional.outer")
		end, { desc = "@conditional.outer" })
		vim.keymap.set({ "n", "x", "o" }, "]F", function()
			ts_move.goto_next_end("@function.outer")
		end, { desc = "@function.outer" })
		vim.keymap.set({ "n", "x", "o" }, "[=", function()
			ts_move.goto_previous_start("@conditional.outer")
		end, { desc = "@conditional.outer" })
		vim.keymap.set({ "n", "x", "o" }, "[f", function()
			ts_move.goto_previous_start("@function.outer")
		end, { desc = "@function.outer" })
		vim.keymap.set({ "n", "x", "o" }, "[+", function()
			ts_move.goto_previous_end("@conditional.outer")
		end, { desc = "@conditional.outer" })
		vim.keymap.set({ "n", "x", "o" }, "[F", function()
			ts_move.goto_previous_end("@function.outer")
		end, { desc = "@function.outer" })
		vim.keymap.set({ "n", "x", "o" }, "]l", function()
			ts_move.goto_next("@loop.*")
		end, { desc = "@loop.*" })
		vim.keymap.set({ "n", "x", "o" }, "[l", function()
			ts_move.goto_previous("@loop.*")
		end, { desc = "@loop.*" })
	end,
}
